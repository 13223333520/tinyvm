# This is a really inefficient solution to the first Project Euler problem.
# See euler1_nodiv.vm for a much better solution.

start:	mov eax, 0
	mov ebx, 0

loop:	mov ecx, ebx
	mod ecx, 3
	rem ecx
	cmp ecx, 0
	jne 8
	add eax, ebx
	je 15

#	When jumping, you can specify a label, which is tied to an address, 
#	which points to a certain instruction, or you can just specify an address.
#	Both forms are used in this program. (Straight addresses are used because
#	jumping to labels below the current source line doesn't quite work properly.
#	This will be fixed soon.)

	mov ecx, ebx
	mod ecx, 5
	rem ecx
	cmp ecx, 0
	jne 15
	add eax, ebx
	inc ebx
	cmp ebx, 1000000
	jl loop

	mov [0], eax
